
t.abs:     file format elf32-nmc


Disassembly of section .init:

0000001e <_init>:
  1e:	00 00 37 07 	  return;
  1f:	00 00 10 50 	with nul;
  20:	00 00 10 50 	with nul;
  21:	00 00 10 50 	with nul;

Disassembly of section .text:

00000022 <result_code>:
  22:	ff ff ff ff 	undef inst
  23:	00 00 00 00 	  ;

00000024 <start>:
  24:	00 00 d7 4b 	ar7 =  0x58a addr with nul;
  25:	8a 05 00 00 
  26:	07 c0 27 48 	  goto 0x32 gr7=false;
  27:	32 00 00 00 
  28:	00 00 d7 3f 	push gr7 with nul;
  29:	00 00 d7 3f 	push gr7 with nul;

0000002a <int_stop>:
  2a:	00 00 27 48 	  goto 0x58 with nul;
  2b:	58 00 00 00 
  2c:	00 00 10 50 	with nul;
  2d:	00 00 10 50 	with nul;

0000002e <_sync>:
  2e:	00 00 37 07 	  return;
  2f:	00 00 10 50 	with nul;
  30:	00 00 10 50 	with nul;
  31:	00 00 10 50 	with nul;

00000032 <begin_prog>:
  32:	00 00 27 4a 	  call 0x1e with nul;
  33:	1e 00 00 00 
  34:	00 00 10 50 	with nul;
  35:	00 00 10 50 	with nul;
  36:	00 00 27 4a 	  call 0x10c with nul;
  37:	0c 01 00 00 
  38:	00 00 10 50 	with nul;
  39:	00 00 10 50 	with nul;
  3a:	00 00 c7 3f 	push ar7, gr7 with nul;
  3b:	00 00 00 00 	  ;

0000003c <terminate>:
  3c:	00 00 27 4a 	  call 0x13c with nul;
  3d:	3c 01 00 00 
  3e:	00 00 10 50 	with nul;
  3f:	00 00 10 50 	with nul;
  40:	00 00 c5 39 	pop ar5, gr5 with nul;
  41:	6f d9 15 74 	gr0 = gr5 gr7 = gr5;
  42:	00 00 17 62 	[0x22] = gr7 with nul;
  43:	22 00 00 00 
  44:	00 00 27 48 	  goto 0x2a with nul;
  45:	2a 00 00 00 
  46:	00 00 10 50 	with nul;
  47:	00 00 10 50 	with nul;

00000048 <_exit>:
  48:	00 00 d7 47 	ar7 = ar7 + 0xfffffffe addr with nul;
  49:	fe ff ff ff 
  4a:	00 00 27 48 	  goto 0x3c with nul;
  4b:	3c 00 00 00 
  4c:	00 00 10 50 	with nul;
  4d:	00 00 10 50 	with nul;

0000004e <__exit>:
  4e:	00 00 d7 47 	ar7 = ar7 + 0xfffffffe addr with nul;
  4f:	fe ff ff ff 
  50:	00 00 c5 39 	pop ar5, gr5 with nul;
  51:	6f d9 15 74 	gr0 = gr5 gr7 = gr5;
  52:	00 00 17 62 	[0x22] = gr7 with nul;
  53:	22 00 00 00 
  54:	00 00 27 48 	  goto 0x2a with nul;
  55:	2a 00 00 00 
  56:	00 00 10 50 	with nul;
  57:	00 00 10 50 	with nul;

00000058 <stop>:
  58:	00 00 27 48 	  goto 0x58 with nul;
  59:	58 00 00 00 
  5a:	00 00 10 50 	with nul;
  5b:	00 00 10 50 	with nul;

0000005c <_rgb>:
  5c:	00 00 d4 47 	ar4 = ar7 + 0xfffffffe addr with nul;
  5d:	fe ff ff ff 
  5e:	00 00 c0 3f 	push ar0, gr0 with nul;
  5f:	00 00 c1 3f 	push ar1, gr1 with nul;
  60:	00 00 c2 3f 	push ar2, gr2 with nul;
  61:	00 00 c3 3f 	push ar3, gr3 with nul;
  62:	00 00 c4 3f 	push ar4, gr4 with nul;
  63:	00 00 c5 3f 	push ar5, gr5 with nul;
  64:	00 00 00 44 	gr0 = 0x6;
  65:	06 00 00 00 
  66:	00 00 80 44 	gr2 = 0x0;
  67:	00 00 00 00 
  68:	00 00 c0 44 	gr3 = 0x0;
  69:	00 00 00 00 
  6a:	00 00 00 45 	gr4 = 0x20;
  6b:	20 00 00 00 
  6c:	00 00 40 45 	gr5 = 0x0;
  6d:	00 00 00 00 
  6e:	00 00 51 4a 	ar1 =  0x458a addr with nul;
  6f:	8a 45 00 00 
  70:	00 00 92 4a 	ar2 =  0x4592 addr with nul;
  71:	92 45 00 00 
  72:	00 00 d3 4a 	ar3 =  0x459a addr with nul;
  73:	9a 45 00 00 
  74:	00 00 11 39 	gr1 = [--ar4] with nul;
  75:	00 00 00 00 	  ;

00000076 <counterdes>:
  76:	61 e0 10 50 	gr1 = gr1 - gr4;
  77:	00 00 00 00 	  ;
  78:	00 00 22 48 	if >  goto 0xfa with nul;
  79:	fa 00 00 00 
  7a:	00 00 10 50 	with nul;
  7b:	00 00 10 50 	with nul;
  7c:	00 00 2b 48 	if <  goto 0x80 with nul;
  7d:	80 00 00 00 
  7e:	00 00 10 50 	with nul;
  7f:	00 00 10 50 	with nul;

00000080 <exit_counterdes>:
  80:	63 ec 10 50 	gr3 = gr1 + gr4;
  81:	db e8 10 50 	gr3 = gr3 + -1;
  82:	00 00 d3 76 	VL = gr3 with nul;
  83:	00 00 08 39 	ar0 = [--ar4] with nul;
  84:	00 10 08 94 	fpu 0 rep vlen vreg0 = [ar0 ++ gr0];
  85:	00 10 48 9e 	fpu 0 rep vlen [ar1++] = vreg0;

00000086 <sort_des>:
  86:	aa e0 10 50 	gr2 = gr2 - gr5;
  87:	00 00 00 00 	  ;
  88:	00 00 22 48 	if >  goto 0x90 with nul;
  89:	90 00 00 00 
  8a:	00 00 10 50 	with nul;
  8b:	00 00 10 50 	with nul;
  8c:	00 00 27 48 	  goto 0x98 with nul;
  8d:	98 00 00 00 
  8e:	00 00 10 50 	with nul;
  8f:	00 00 10 50 	with nul;

00000090 <help_sort_des>:
  90:	00 e0 0b 94 	fpu 0 rep 32 vreg0 = [ar0 ++ gr0];
  91:	00 e0 4b 9e 	fpu 0 rep 32 [ar1++] = vreg0;
  92:	92 e8 10 50 	gr2 = gr2 + -1;
  93:	00 00 00 00 	  ;
  94:	00 00 27 48 	  goto 0x86 with nul;
  95:	86 00 00 00 
  96:	00 00 10 50 	with nul;
  97:	00 00 10 50 	with nul;

00000098 <cicle2>:
  98:	00 00 80 44 	gr2 = 0x0;
  99:	00 00 00 00 
  9a:	00 00 c0 44 	gr3 = 0x0;
  9b:	00 00 00 00 
  9c:	00 00 d4 47 	ar4 = ar7 + 0xfffffff2 addr with nul;
  9d:	f2 ff ff ff 
  9e:	00 00 11 39 	gr1 = [--ar4] with nul;
  9f:	00 00 00 00 	  ;

000000a0 <counterdes_1>:
  a0:	61 e0 10 50 	gr1 = gr1 - gr4;
  a1:	00 00 00 00 	  ;
  a2:	00 00 22 48 	if >  goto 0x100 with nul;
  a3:	00 01 00 00 
  a4:	00 00 10 50 	with nul;
  a5:	00 00 10 50 	with nul;
  a6:	00 00 2b 48 	if <  goto 0xaa with nul;
  a7:	aa 00 00 00 
  a8:	00 00 10 50 	with nul;
  a9:	00 00 10 50 	with nul;

000000aa <exit_counterdes_1>:
  aa:	63 ec 10 50 	gr3 = gr1 + gr4;
  ab:	db e8 10 50 	gr3 = gr3 + -1;
  ac:	00 00 d3 76 	VL = gr3 with nul;
  ad:	00 00 08 39 	ar0 = [--ar4] with nul;
  ae:	00 00 10 46 	ar0 = ar0 + 0x2 addr with nul;
  af:	02 00 00 00 
  b0:	00 10 08 94 	fpu 0 rep vlen vreg0 = [ar0 ++ gr0];
  b1:	00 10 88 9e 	fpu 0 rep vlen [ar2++] = vreg0;

000000b2 <sort_des_1>:
  b2:	aa e0 10 50 	gr2 = gr2 - gr5;
  b3:	00 00 00 00 	  ;
  b4:	00 00 22 48 	if >  goto 0xbc with nul;
  b5:	bc 00 00 00 
  b6:	00 00 10 50 	with nul;
  b7:	00 00 10 50 	with nul;
  b8:	00 00 27 48 	  goto 0xc4 with nul;
  b9:	c4 00 00 00 
  ba:	00 00 10 50 	with nul;
  bb:	00 00 10 50 	with nul;

000000bc <help_sort_des_1>:
  bc:	00 e0 0b 94 	fpu 0 rep 32 vreg0 = [ar0 ++ gr0];
  bd:	00 e0 8b 9e 	fpu 0 rep 32 [ar2++] = vreg0;
  be:	92 e8 10 50 	gr2 = gr2 + -1;
  bf:	00 00 00 00 	  ;
  c0:	00 00 27 48 	  goto 0xb2 with nul;
  c1:	b2 00 00 00 
  c2:	00 00 10 50 	with nul;
  c3:	00 00 10 50 	with nul;

000000c4 <cicle3>:
  c4:	00 00 80 44 	gr2 = 0x0;
  c5:	00 00 00 00 
  c6:	00 00 c0 44 	gr3 = 0x0;
  c7:	00 00 00 00 
  c8:	00 00 d4 47 	ar4 = ar7 + 0xfffffff2 addr with nul;
  c9:	f2 ff ff ff 
  ca:	00 00 11 39 	gr1 = [--ar4] with nul;
  cb:	00 00 00 00 	  ;

000000cc <counterdes_2>:
  cc:	61 e0 10 50 	gr1 = gr1 - gr4;
  cd:	00 00 00 00 	  ;
  ce:	00 00 22 48 	if >  goto 0x106 with nul;
  cf:	06 01 00 00 
  d0:	00 00 10 50 	with nul;
  d1:	00 00 10 50 	with nul;
  d2:	00 00 2b 48 	if <  goto 0xd6 with nul;
  d3:	d6 00 00 00 
  d4:	00 00 10 50 	with nul;
  d5:	00 00 10 50 	with nul;

000000d6 <exit_counterdes_2>:
  d6:	63 ec 10 50 	gr3 = gr1 + gr4;
  d7:	db e8 10 50 	gr3 = gr3 + -1;
  d8:	00 00 d3 76 	VL = gr3 with nul;
  d9:	00 00 08 39 	ar0 = [--ar4] with nul;
  da:	00 00 10 46 	ar0 = ar0 + 0x4 addr with nul;
  db:	04 00 00 00 
  dc:	00 10 08 94 	fpu 0 rep vlen vreg0 = [ar0 ++ gr0];
  dd:	00 10 c8 9e 	fpu 0 rep vlen [ar3++] = vreg0;

000000de <sort_des_2>:
  de:	aa e0 10 50 	gr2 = gr2 - gr5;
  df:	00 00 00 00 	  ;
  e0:	00 00 22 48 	if >  goto 0xe8 with nul;
  e1:	e8 00 00 00 
  e2:	00 00 10 50 	with nul;
  e3:	00 00 10 50 	with nul;
  e4:	00 00 27 48 	  goto 0xf0 with nul;
  e5:	f0 00 00 00 
  e6:	00 00 10 50 	with nul;
  e7:	00 00 10 50 	with nul;

000000e8 <help_sort_des_2>:
  e8:	00 e0 0b 94 	fpu 0 rep 32 vreg0 = [ar0 ++ gr0];
  e9:	00 e0 cb 9e 	fpu 0 rep 32 [ar3++] = vreg0;
  ea:	92 e8 10 50 	gr2 = gr2 + -1;
  eb:	00 00 00 00 	  ;
  ec:	00 00 27 48 	  goto 0xde with nul;
  ed:	de 00 00 00 
  ee:	00 00 10 50 	with nul;
  ef:	00 00 10 50 	with nul;

000000f0 <exit_rgb>:
  f0:	00 00 c5 39 	pop ar5, gr5 with nul;
  f1:	00 00 c4 39 	pop ar4, gr4 with nul;
  f2:	00 00 c3 39 	pop ar3, gr3 with nul;
  f3:	00 00 c2 39 	pop ar2, gr2 with nul;
  f4:	00 00 c1 39 	pop ar1, gr1 with nul;
  f5:	00 00 c0 39 	pop ar0, gr0 with nul;
  f6:	00 00 37 07 	  return;
  f7:	00 00 10 50 	with nul;
  f8:	00 00 10 50 	with nul;
  f9:	00 00 10 50 	with nul;

000000fa <help_counterdes1>:
  fa:	92 e4 10 50 	gr2 = gr2 + 1;
  fb:	00 00 00 00 	  ;
  fc:	00 00 27 48 	  goto 0x76 with nul;
  fd:	76 00 00 00 
  fe:	00 00 10 50 	with nul;
  ff:	00 00 10 50 	with nul;

00000100 <help_counterdes1_1>:
 100:	92 e4 10 50 	gr2 = gr2 + 1;
 101:	00 00 00 00 	  ;
 102:	00 00 27 48 	  goto 0xa0 with nul;
 103:	a0 00 00 00 
 104:	00 00 10 50 	with nul;
 105:	00 00 10 50 	with nul;

00000106 <help_counterdes1_2>:
 106:	92 e4 10 50 	gr2 = gr2 + 1;
 107:	00 00 00 00 	  ;
 108:	00 00 27 48 	  goto 0xcc with nul;
 109:	cc 00 00 00 
 10a:	00 00 10 50 	with nul;
 10b:	00 00 10 50 	with nul;

0000010c <__main>:
 10c:	00 00 c6 3f 	push ar6, gr6 with nul;
 10d:	00 00 c2 3f 	push ar2, gr2 with nul;
 10e:	00 00 c1 3f 	push ar1, gr1 with nul;
 10f:	00 00 c0 3f 	push ar0, gr0 with nul;
 110:	00 00 d7 47 	ar7 = ar7 + 0x8 addr with nul;
 111:	08 00 00 00 
 112:	00 00 d6 47 	ar6 = ar7 + 0xfffffff8 addr with nul;
 113:	f8 ff ff ff 
 114:	00 00 00 44 	gr0 = 0xc;
 115:	0c 00 00 00 
 116:	00 00 90 33 	[ar6] = gr0 with nul;
 117:	00 00 0f 74 	gr0 = ar7 with nul;
 118:	00 00 10 5a 	ar0 = gr0 with nul;
 119:	00 00 00 00 	  ;
 11a:	00 00 10 46 	ar0 = ar0 + 0xffffffff addr with nul;
 11b:	ff ff ff ff 
 11c:	00 00 48 74 	gr1 = ar0 with nul;
 11d:	00 00 92 31 	gr2 = [ar6] with nul;
 11e:	00 00 50 5a 	ar0 = gr1 with nul;
 11f:	00 00 12 32 	[ar0] = gr2 with nul;
 120:	00 00 10 5a 	ar0 = gr0 with nul;
 121:	00 00 00 00 	  ;
 122:	00 00 10 46 	ar0 = ar0 + 0xfffffffe addr with nul;
 123:	fe ff ff ff 
 124:	00 00 48 74 	gr1 = ar0 with nul;
 125:	00 00 00 00 	  ;
 126:	00 00 80 44 	gr2 = 0x542;
 127:	42 05 00 00 
 128:	00 00 50 5a 	ar0 = gr1 with nul;
 129:	00 00 12 32 	[ar0] = gr2 with nul;
 12a:	00 00 27 4a 	  call 0x5c with nul;
 12b:	5c 00 00 00 
 12c:	00 00 10 50 	with nul;
 12d:	00 00 10 50 	with nul;
 12e:	00 00 00 44 	gr0 = 0x0;
 12f:	00 00 00 00 
 130:	00 00 d0 75 	gr7 = gr0 with nul;
 131:	00 00 00 00 	  ;
 132:	00 00 d7 47 	ar7 = ar7 + 0xfffffff8 addr with nul;
 133:	f8 ff ff ff 
 134:	00 00 c0 39 	pop ar0, gr0 with nul;
 135:	00 00 c1 39 	pop ar1, gr1 with nul;
 136:	00 00 c2 39 	pop ar2, gr2 with nul;
 137:	00 00 c6 39 	pop ar6, gr6 with nul;
 138:	00 00 37 07 	  return;
 139:	00 00 10 50 	with nul;
 13a:	00 00 10 50 	with nul;
 13b:	00 00 10 50 	with nul;

Disassembly of section .fini:

0000013c <_fini>:
 13c:	00 00 37 07 	  return;
 13d:	00 00 10 50 	with nul;
 13e:	00 00 10 50 	with nul;
 13f:	00 00 10 50 	with nul;

Disassembly of section .MyData:

00000140 <B>:
 140:	03 00 00 00 	

Disassembly of section .data:

00000542 <_array>:
 542:	00 00 00 00 	
 543:	00 00 18 40 	
 544:	00 00 00 00 	
 545:	00 00 22 40 	
 546:	00 00 00 00 	
 547:	00 00 08 40 	
 548:	00 00 00 00 	
 549:	00 00 10 40 	
 54a:	00 00 00 00 	
 54b:	00 00 14 40 	
 54c:	00 00 00 00 	
 54d:	00 00 20 40 	
 54e:	00 00 00 00 	
 54f:	00 00 26 40 	
 550:	00 00 00 00 	
 551:	00 00 28 40 	
 552:	00 00 00 00 	
 553:	00 00 2a 40 	
 554:	00 00 00 00 	
 555:	00 00 f0 3f 	
 556:	00 00 00 00 	
 557:	00 00 00 40 	
 558:	00 00 00 00 	
 559:	00 00 08 40 	
 55a:	00 00 00 00 	
 55b:	00 00 10 40 	
 55c:	00 00 00 00 	
 55d:	00 00 14 40 	
 55e:	00 00 00 00 	
 55f:	00 00 18 40 	
 560:	00 00 00 00 	
 561:	00 00 1c 40 	
 562:	00 00 00 00 	
 563:	00 00 20 40 	
 564:	00 00 00 00 	
 565:	00 00 22 40 	
	...
 569:	00 00 f0 3f 	
 56a:	00 00 00 00 	
 56b:	00 00 00 40 	
 56c:	00 00 00 00 	
 56d:	00 00 08 40 	
 56e:	00 00 00 00 	
 56f:	00 00 14 40 	
 570:	00 00 00 00 	
 571:	00 00 1c 40 	
 572:	00 00 00 00 	
 573:	00 00 14 40 	
 574:	00 00 00 00 	
 575:	00 00 10 40 	
 576:	00 00 00 00 	
 577:	00 00 08 40 	
 578:	00 00 00 00 	
 579:	00 00 f0 3f 	
 57a:	00 00 00 00 	
 57b:	00 78 84 40 	
 57c:	00 00 00 00 	
 57d:	00 00 24 40 	
 57e:	00 00 00 00 	
 57f:	00 00 26 40 	
 580:	00 00 00 00 	
 581:	00 00 26 40 	
 582:	00 00 00 00 	
 583:	00 80 40 40 	
 584:	00 00 00 00 	
 585:	00 40 50 40 	
 586:	00 00 00 00 	
 587:	00 00 40 40 	
 588:	00 00 00 00 	
 589:	00 00 28 40 	

Disassembly of section .stack:

0000058a <__bss_start>:
	...

Disassembly of section .MyData1:

0000458a <C>:
	...

00004592 <D>:
	...

0000459a <E>:
	...
